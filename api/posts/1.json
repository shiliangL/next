{"total":6,"pageSize":10,"pageCount":1,"data":[{"title":"react移动端适配方案","slug":"react移动端适配方案","date":"2018-12-29T13:54:34.000Z","updated":"2018-12-29T13:55:46.456Z","comments":true,"pin":null,"path":"api/articles/react移动端适配方案.json","excerpt":"","keywords":null,"cover":"https://user-gold-cdn.xitu.io/2018/12/22/167d3ba8d648eb46?w=3008&amp;h=1656&amp;f=png&amp;s=307506","content":"<h3 id=\"react移动端适配方案\"><a href=\"#react移动端适配方案\" class=\"headerlink\" title=\"react移动端适配方案\"></a>react移动端适配方案</h3><blockquote>\n<p>本文项目基于create-react-app构建。更多移动端资料推荐</p>\n</blockquote>\n<ul>\n<li><p><a href=\"https://www.w3cplus.com/mobile/vw-layout-in-vue.html\" target=\"_blank\" rel=\"noopener\">w3cplus 再聊移动端页面的适配</a></p>\n</li>\n<li><p><a href=\"https://www.w3cplus.com/css/vw-for-layout.html\" target=\"_blank\" rel=\"noopener\">w3cplus 如何在Vue项目中使用vw实现移动端适配</a></p>\n</li>\n<li><p><a href=\"https://www.w3cplus.com/mobile/lib-flexible-for-html5-layout.html\" target=\"_blank\" rel=\"noopener\">w3cplus 使用Flexible实现手淘H5页面的终端适配</a></p>\n</li>\n<li><p><a href=\"https://github.com/shiliangL/react-vw-layout\">本项目配置源码地址</a></p>\n<blockquote>\n<p>tips</p>\n</blockquote>\n</li>\n</ul>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"CSS\"><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 处理 vm 适配图片不显示问题 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">img</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">content</span>: normal <span class=\"meta\">!important</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"1️⃣-项目初始-暴露配置项\"><a href=\"#1️⃣-项目初始-暴露配置项\" class=\"headerlink\" title=\"1️⃣ 项目初始 + 暴露配置项\"></a>1️⃣ 项目初始 + 暴露配置项</h3><ul>\n<li>1、create-react-app react-vw-layout 初始化项目</li>\n<li>2、npm run eject 暴露配置项</li>\n</ul>\n<h3 id=\"2️⃣-postCss插件安装配置\"><a href=\"#2️⃣-postCss插件安装配置\" class=\"headerlink\" title=\"2️⃣ postCss插件安装配置\"></a>2️⃣ postCss插件安装配置</h3><blockquote>\n<p>package.json 中添加依赖,并安装</p>\n</blockquote>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"JS\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">\"postcss-aspect-ratio-mini\"</span>: <span class=\"string\">\"0.0.2\"</span>,</span><br><span class=\"line\"><span class=\"comment\">//--坑点 已经更新 postcss-preset-env 所以请使用 \"postcss-preset-env\": \"6.0.6\"👇</span></span><br><span class=\"line\"><span class=\"string\">\"postcss-cssnext\"</span>: <span class=\"string\">\"^3.1.0\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"postcss-flexbugs-fixes\"</span>: <span class=\"string\">\"3.2.0\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"postcss-loader\"</span>: <span class=\"string\">\"2.0.8\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"postcss-px-to-viewport\"</span>: <span class=\"string\">\"0.0.3\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"postcss-viewport-units\"</span>: <span class=\"string\">\"^0.1.4\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"postcss-write-svg\"</span>: <span class=\"string\">\"^3.0.1\"</span></span><br></pre></td></tr></table></figure></div>\n<blockquote>\n<p>config/webpack.config.dev.js 文件中修改添加配置（开发环境生效）<br>(生产环境打包配置如下，也是一样的在文件夹 config/webpack.config.prod 中修改)</p>\n</blockquote>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"JS\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// config/webpack.config.dev.js</span></span><br><span class=\"line\"><span class=\"comment\">// 文件头部引进依赖</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">'fs'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">'path'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> resolve = <span class=\"built_in\">require</span>(<span class=\"string\">'resolve'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> webpack = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> PnpWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'pnp-webpack-plugin'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> HtmlWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'html-webpack-plugin'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> CaseSensitivePathsPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'case-sensitive-paths-webpack-plugin'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> InterpolateHtmlPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'react-dev-utils/InterpolateHtmlPlugin'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> WatchMissingNodeModulesPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'react-dev-utils/WatchMissingNodeModulesPlugin'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> ModuleScopePlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'react-dev-utils/ModuleScopePlugin'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> getCSSModuleLocalIdent = <span class=\"built_in\">require</span>(<span class=\"string\">'react-dev-utils/getCSSModuleLocalIdent'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> getClientEnvironment = <span class=\"built_in\">require</span>(<span class=\"string\">'./env'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> paths = <span class=\"built_in\">require</span>(<span class=\"string\">'./paths'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> ManifestPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'webpack-manifest-plugin'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> ModuleNotFoundPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'react-dev-utils/ModuleNotFoundPlugin'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> ForkTsCheckerWebpackPlugin = <span class=\"built_in\">require</span>(<span class=\"string\">'fork-ts-checker-webpack-plugin-alt'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> typescriptFormatter = <span class=\"built_in\">require</span>(<span class=\"string\">'react-dev-utils/typescriptFormatter'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 移动端适配添加 - 插入</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> postcssAspectRatioMini = <span class=\"built_in\">require</span>(<span class=\"string\">'postcss-aspect-ratio-mini'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> postcssPxToViewport = <span class=\"built_in\">require</span>(<span class=\"string\">'postcss-px-to-viewport'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> postcssWriteSvg = <span class=\"built_in\">require</span>(<span class=\"string\">'postcss-write-svg'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> postcssCssnext = <span class=\"built_in\">require</span>(<span class=\"string\">'postcss-preset-env'</span>); <span class=\"comment\">//这个插件已经更新 postcss-preset-env 所以请使用 \"postcss-preset-env\": \"6.0.6\",</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> postcssViewportUnits = <span class=\"built_in\">require</span>(<span class=\"string\">'postcss-viewport-units'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> cssnano = <span class=\"built_in\">require</span>(<span class=\"string\">'cssnano'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//配置项中添加使用</span></span><br><span class=\"line\"></span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Options for PostCSS as we reference these options twice</span></span><br><span class=\"line\">    <span class=\"comment\">// Adds vendor prefixing based on your specified browser support in</span></span><br><span class=\"line\">    <span class=\"comment\">// package.json</span></span><br><span class=\"line\">    loader: <span class=\"built_in\">require</span>.resolve(<span class=\"string\">'postcss-loader'</span>),</span><br><span class=\"line\">    options: &#123;</span><br><span class=\"line\">      <span class=\"comment\">// Necessary for external CSS imports to work</span></span><br><span class=\"line\">      <span class=\"comment\">// https://github.com/facebook/create-react-app/issues/2677</span></span><br><span class=\"line\">      ident: <span class=\"string\">'postcss'</span>,</span><br><span class=\"line\">      plugins: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> [</span><br><span class=\"line\">        <span class=\"built_in\">require</span>(<span class=\"string\">'postcss-flexbugs-fixes'</span>),</span><br><span class=\"line\">        <span class=\"built_in\">require</span>(<span class=\"string\">'postcss-preset-env'</span>)(&#123;</span><br><span class=\"line\">          autoprefixer: &#123;</span><br><span class=\"line\">            flexbox: <span class=\"string\">'no-2009'</span>,</span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          stage: <span class=\"number\">3</span>,</span><br><span class=\"line\">        &#125;),</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// -----插入适配移动端配置项-----👇</span></span><br><span class=\"line\">        postcssAspectRatioMini(&#123;&#125;),</span><br><span class=\"line\">        postcssPxToViewport(&#123;</span><br><span class=\"line\">          viewportWidth: <span class=\"number\">750</span>, <span class=\"comment\">// (Number) The width of the viewport.</span></span><br><span class=\"line\">          viewportHeight: <span class=\"number\">1334</span>, <span class=\"comment\">// (Number) The height of the viewport.</span></span><br><span class=\"line\">          unitPrecision: <span class=\"number\">3</span>, <span class=\"comment\">// (Number) The decimal numbers to allow the REM units to grow to.</span></span><br><span class=\"line\">          viewportUnit: <span class=\"string\">'vw'</span>, <span class=\"comment\">// (String) Expected units.</span></span><br><span class=\"line\">          selectorBlackList: [<span class=\"string\">'.ignore'</span>, <span class=\"string\">'.hairlines'</span>], <span class=\"comment\">// (Array) The selectors to ignore and leave as px.</span></span><br><span class=\"line\">          minPixelValue: <span class=\"number\">1</span>, <span class=\"comment\">// (Number) Set the minimum pixel value to replace.</span></span><br><span class=\"line\">          mediaQuery: <span class=\"literal\">false</span> <span class=\"comment\">// (Boolean) Allow px to be converted in media queries.</span></span><br><span class=\"line\">        &#125;),</span><br><span class=\"line\">        postcssWriteSvg(&#123;</span><br><span class=\"line\">          utf8: <span class=\"literal\">false</span></span><br><span class=\"line\">        &#125;),</span><br><span class=\"line\">        postcssCssnext(&#123;&#125;),</span><br><span class=\"line\">        postcssViewportUnits(&#123;&#125;),</span><br><span class=\"line\">        cssnano(&#123;</span><br><span class=\"line\">          <span class=\"comment\">//旧的 --坑点</span></span><br><span class=\"line\">          <span class=\"comment\">// preset: \"advanced\",</span></span><br><span class=\"line\">          <span class=\"comment\">// autoprefixer: false,</span></span><br><span class=\"line\">          <span class=\"comment\">// \"postcss-zindex\": false</span></span><br><span class=\"line\">          <span class=\"comment\">//新配置继续使用高级配置,按照这个配置</span></span><br><span class=\"line\">          <span class=\"string\">\"cssnano-preset-advanced\"</span>: &#123;</span><br><span class=\"line\">            zindex: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            autoprefixer: <span class=\"literal\">false</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      ],</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"3️⃣测试验证\"><a href=\"#3️⃣测试验证\" class=\"headerlink\" title=\"3️⃣测试验证\"></a>3️⃣测试验证</h3><blockquote>\n<p>修改 App.css 文件</p>\n</blockquote>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"CSS\"><figure class=\"iseeu highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.App</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">750px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">300px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: <span class=\"number\">#409eff</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#ffffff</span>;</span><br><span class=\"line\">  <span class=\"attribute\">line-height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">text-align</span>: center;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<blockquote>\n<p>npm start 启动项目，打开控制台，这个时候已经生效了</p>\n</blockquote>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/12/22/167d3ba8d648eb46?w=3008&amp;h=1656&amp;f=png&amp;s=307506\" alt=\"\"></p>\n<blockquote>\n<p>配置好生产环境之后验证,npm run build,这个时候，生产打包已经生效了。</p>\n</blockquote>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/12/22/167d3c1fc05d283d?w=2342&amp;h=1074&amp;f=png&amp;s=373052\" alt=\"\"></p>\n<h3 id=\"4️⃣-一些兼兼容性hacks处理\"><a href=\"#4️⃣-一些兼兼容性hacks处理\" class=\"headerlink\" title=\"4️⃣ 一些兼兼容性hacks处理\"></a>4️⃣ 一些兼兼容性hacks处理</h3><blockquote>\n<p>修改 public/index.html, 引入阿里的 cdn</p>\n</blockquote>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"HTML\"><figure class=\"iseeu highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- index.html body 后添加--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"//g.alicdn.com/fdilab/lib3rd/viewport-units-buggyfill/0.6.2/??viewport-units-buggyfill.hacks.min.js,viewport-units-buggyfill.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">  <span class=\"built_in\">window</span>.onload = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">window</span>.viewportUnitsBuggyfill.init(&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">      hacks: <span class=\"built_in\">window</span>.viewportUnitsBuggyfillHacks</span></span><br><span class=\"line\"><span class=\"undefined\">    &#125;);</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"comment\">// 验证输出</span></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">const</span> winDPI = <span class=\"built_in\">window</span>.devicePixelRatio;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">const</span> uAgent = <span class=\"built_in\">window</span>.navigator.userAgent;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">const</span> screenHeight = <span class=\"built_in\">window</span>.screen.height;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">const</span> screenWidth = <span class=\"built_in\">window</span>.screen.width;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">const</span> winWidth = <span class=\"built_in\">window</span>.innerWidth;</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"keyword\">const</span> winHeight = <span class=\"built_in\">window</span>.innerHeight;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">console</span>.log(winDPI, <span class=\"string\">\"设备 DPI\"</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">console</span>.log(uAgent, <span class=\"string\">\"客户端\"</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">console</span>.log(screenWidth, <span class=\"string\">\"屏幕宽度\"</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">console</span>.log(winHeight, <span class=\"string\">\"屏幕高度\"</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">console</span>.log(winWidth, <span class=\"string\">\"Windows Width\"</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">    <span class=\"built_in\">console</span>.log(winHeight, <span class=\"string\">\"Windows Height\"</span>);</span></span><br><span class=\"line\"><span class=\"undefined\">  &#125;;</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/12/22/167d3e154ebd9eca?w=3236&amp;h=1640&amp;f=png&amp;s=205474\" alt=\"\"></p>\n<blockquote>\n<p>至此配置算是完成了,更多其中插件的配置,还需要了解一下官方的配置使用,此外插件和可行性方案都会更新,这里只是作为自己学习实际的一个可行性方案实践的过程,如果有更多更新方案可以留言告知。谢阅~</p>\n</blockquote>\n","text":"react移动端适配方案本文项目基于create-react-app构建。更多移动端资料推荐w3cplus 再聊移动端页面的适配w3cplus 如何在Vue项目中使用vw实现移动端适配w3cplus 使用Flexible实现手淘H5页面的终端适配本项目配置源码地址tips1<br","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"react","slug":"react","count":2,"path":"api/tags/react.json"}]},{"title":"","slug":"dev","date":"2018-12-17T06:46:06.216Z","updated":"2018-12-17T07:06:45.136Z","comments":true,"pin":null,"path":"api/articles/dev.json","excerpt":"","keywords":null,"cover":null,"content":"(() => {\n  const arr = [5, 12, 5, 130, 150];\n  const data = arr.includes(130, fromIndex);\n\n  console.log(data, \"结果\");\n})();\n","text":"(() => {  const arr = [5, 12, 5, 130, 150];  const data = arr.includes(130, fromIndex);  console.log(data, \"结果\");})();","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"ES6常用数组操作方法","slug":"ES6常用数组操作方法","date":"2018-12-17T06:29:11.000Z","updated":"2018-12-17T07:08:11.070Z","comments":true,"pin":null,"path":"api/articles/ES6常用数组操作方法.json","excerpt":"","keywords":null,"cover":null,"content":"<blockquote>\n<p>find() 方法返回数组中满足提供的测试函数的第一个元素的值。否则返回 undefined。</p>\n</blockquote>\n<p>1.基本描述</p>\n<ul>\n<li>传入参数为回调函数,find 方法会对数组的每一项执行 callBack 函数,直到 callBack 返回 true,需要注意的是 callBack 函数会为数组中的每个索引调用即从 0 到 length - 1，而不仅仅是那些被赋值的索引，这意味着对于稀疏数组来说，该方法的效率要低于那些只遍历有值的索引的方法。</li>\n<li>callback 函数带有 3 个参数：当前元素的值、当前元素的索引，以及数组本身。回调默认返回当前值</li>\n<li>该方法不会改变原数组</li>\n<li>第一次调用 callback 函数时会确定元素的索引范围，因此在 find 方法开始执行之后添加到数组的新元素将不会被 callback 函数访问到。如果数组中一个尚未被 callback 函数访问到的元素的值被 callback 函数所改变，那么当 callback 函数访问到它时，它的值是将是根据它在数组中的索引所访问到的当前值。被删除的元素仍旧会被访问到。</li>\n</ul>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"JS\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 返回符合条件的第一个元素</span></span><br><span class=\"line\">(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> arr = [<span class=\"number\">5</span>, <span class=\"number\">12</span>, <span class=\"number\">5</span>, <span class=\"number\">130</span>, <span class=\"number\">150</span>];</span><br><span class=\"line\">  <span class=\"keyword\">const</span> data = arr.find(<span class=\"function\">(<span class=\"params\">item, index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> item &gt; <span class=\"number\">120</span>;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(data, <span class=\"string\">\"结果\"</span>);</span><br><span class=\"line\">&#125;)();</span><br><span class=\"line\"><span class=\"comment\">// 数组中寻找质数（如果找不到质数则返回undefined）</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isPrime</span>(<span class=\"params\">element, index, array</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> start = <span class=\"number\">2</span>;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (start &lt;= <span class=\"built_in\">Math</span>.sqrt(element)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (element % start++ &lt; 1) &#123;</span><br><span class=\"line\">      return false;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  return element &gt; 1;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">console.log([4, 6, 8, 12].find(isPrime)); // undefined, not found</span><br><span class=\"line\">console.log([4, 5, 8, 12].find(isPrime)); // 5</span><br></pre></td></tr></table></figure></div>\n<p>2.兼容</p>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"JS\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (!<span class=\"built_in\">Array</span>.prototype.find) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">Object</span>.defineProperty(<span class=\"built_in\">Array</span>.prototype, <span class=\"string\">\"find\"</span>, &#123;</span><br><span class=\"line\">    value: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">predicate</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"comment\">// 1. Let O be ? ToObject(this value).</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span> == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>(<span class=\"string\">'\"this\" is null or not defined'</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> o = <span class=\"built_in\">Object</span>(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">      <span class=\"comment\">// 2. Let len be ? ToLength(? Get(O, \"length\")).</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> len = o.length &gt;&gt;&gt; <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"comment\">// 3. If IsCallable(predicate) is false, throw a TypeError exception.</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> predicate !== <span class=\"string\">\"function\"</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>(<span class=\"string\">\"predicate must be a function\"</span>);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"comment\">// 4. If thisArg was supplied, let T be thisArg; else let T be undefined.</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> thisArg = <span class=\"built_in\">arguments</span>[<span class=\"number\">1</span>];</span><br><span class=\"line\">      <span class=\"comment\">// 5. Let k be 0.</span></span><br><span class=\"line\">      <span class=\"keyword\">var</span> k = <span class=\"number\">0</span>;</span><br><span class=\"line\">      <span class=\"comment\">// 6. Repeat, while k &lt; len</span></span><br><span class=\"line\">      <span class=\"keyword\">while</span> (k &lt; len) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// a. Let Pk be ! ToString(k).</span></span><br><span class=\"line\">        <span class=\"comment\">// b. Let kValue be ? Get(O, Pk).</span></span><br><span class=\"line\">        <span class=\"comment\">// c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).</span></span><br><span class=\"line\">        <span class=\"comment\">// d. If testResult is true, return kValue.</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> kValue = o[k];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (predicate.call(thisArg, kValue, k, o)) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> kValue;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// e. Increase k by 1.</span></span><br><span class=\"line\">        k++;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// 7. Return undefined.</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"literal\">undefined</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n<blockquote>\n<p>findIndex()方法返回数组中满足提供的测试函数的第一个元素的索引。否则返回-1。</p>\n</blockquote>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"JS\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 返回符合条件的第一个元素的索引</span></span><br><span class=\"line\">(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> arr = [<span class=\"number\">5</span>, <span class=\"number\">12</span>, <span class=\"number\">5</span>, <span class=\"number\">130</span>, <span class=\"number\">150</span>];</span><br><span class=\"line\">  <span class=\"keyword\">const</span> data = arr.findIndex(<span class=\"function\">(<span class=\"params\">item, index,arr</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> item &gt; <span class=\"number\">120</span>;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(data, <span class=\"string\">\"结果\"</span>);</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure></div>\n<blockquote>\n<p>includes(searchElement, fromIndex) 方法用来判断一个数组是否包含一个指定的值，根据情况，如果包含则返回 true，否则返回false。参数查找元素,从哪里开始查找。</p>\n</blockquote>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"PLAIN\"><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 返回符合条件的第一个元素的索引</span><br><span class=\"line\">(() =&gt; &#123;</span><br><span class=\"line\">  const arr = [5, 12, 5, 130, 150];</span><br><span class=\"line\">  const data = arr.includes(searchElement, fromIndex);</span><br><span class=\"line\">  console.log(data, &quot;结果&quot;);</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure></div>\n","text":"find() 方法返回数组中满足提供的测试函数的第一个元素的值。否则返回 undefined。1.基本描述传入参数为回调函数,find 方法会对数组的每一项执行 callBack 函数,直到 callBack 返回 true,需要注意的是 callBack 函数会为数组中的每个索","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"vscode快速构建Flutter项目+热加载调试","slug":"vscode快速构建Flutter项目-热加载调试","date":"2018-12-06T05:33:40.000Z","updated":"2018-12-06T05:35:07.650Z","comments":true,"pin":null,"path":"api/articles/vscode快速构建Flutter项目-热加载调试.json","excerpt":"","keywords":null,"cover":"https://user-gold-cdn.xitu.io/2018/12/6/16781f024d2d4b39?w=1240&amp;h=930&amp;f=png&amp;s=230304","content":"<p>官方SDK 更新，加上本机环境出了点问题，所以写了这篇文章。简单的介绍一下 Flutter 应用在vscode中的快速构建和热加载调试。</p>\n<blockquote>\n<p>温馨提示操作之前先配一下如下镜像到你的环境变量中。不然下载依赖会等到地老天荒。SDK 安装请参考 <a href=\"https://flutterchina.club/setup-macos/\" target=\"_blank\" rel=\"noopener\">中文官网</a></p>\n</blockquote>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"JS\"><figure class=\"iseeu highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> PUB_HOSTED_URL=https:<span class=\"comment\">//pub.flutter-io.cn export</span></span><br><span class=\"line\"></span><br><span class=\"line\">FLUTTER_STORAGE_BASE_URL=https:<span class=\"comment\">//storage.flutter-io.cn</span></span><br></pre></td></tr></table></figure></div>\n<blockquote>\n<p>1、插件中安装 Flutter 插件，安装完毕重新载入软件，安装 Flutter 插件的时候会默认的安装 Dart 插件（Dart是谷歌开发的计算机编程语言）<br><img src=\"https://user-gold-cdn.xitu.io/2018/12/6/16781f024d2d4b39?w=1240&amp;h=930&amp;f=png&amp;s=230304\" alt=\"image.png\"></p>\n</blockquote>\n<blockquote>\n<p>2、打开vscode命令面板（comm+shift+p）选择Flutter:new project<br><img src=\"https://user-gold-cdn.xitu.io/2018/12/6/16781f024d373ade?w=1240&amp;h=930&amp;f=png&amp;s=323143\" alt=\"image.png\"></p>\n</blockquote>\n<blockquote>\n<p>3、输入你需要的项目名称选择对应存放的文件位置，等待依赖下载，你会看到下图<br><img src=\"https://user-gold-cdn.xitu.io/2018/12/6/16781f024d47c8e9?w=1240&amp;h=930&amp;f=png&amp;s=393613\" alt=\"image.png\"></p>\n</blockquote>\n<blockquote>\n<p>4、点击设备可以创建设备，开启已有设备，开启设备后选择到调试（虫子），添加调试配置，只管添加配置，然后保存就好了。<br><img src=\"https://user-gold-cdn.xitu.io/2018/12/6/16781f024d608c61?w=1240&amp;h=695&amp;f=png&amp;s=578376\" alt=\"image.png\"></p>\n</blockquote>\n<blockquote>\n<p>5、选择左上方的开启调试。项目开始打包构建安装到选择的选择的设备上。<br><img src=\"https://user-gold-cdn.xitu.io/2018/12/6/16781f024e072a45?w=1240&amp;h=716&amp;f=png&amp;s=413620\" alt=\"image.png\"></p>\n</blockquote>\n<blockquote>\n<p>6、lib/main.dart中编辑插入 Text(‘hello flutter’)，保存文件，你会发现效果会立马呈现到 App 上，开发如此丝滑。<br><img src=\"https://user-gold-cdn.xitu.io/2018/12/6/16781f024e2de9d3?w=1240&amp;h=693&amp;f=png&amp;s=495573\" alt=\"image.png\"></p>\n</blockquote>\n<blockquote>\n<p>7、好了教程就到这里了，可能教程也比较简单，后面再给大家分享一下其他的。谢谢大家的查阅。😘</p>\n</blockquote>\n","text":"官方SDK 更新，加上本机环境出了点问题，所以写了这篇文章。简单的介绍一下 Flutter 应用在vscode中的快速构建和热加载调试。温馨提示操作之前先配一下如下镜像到你的环境变量中。不然下载依赖会等到地老天荒。SDK 安装请参考 中文官网1<br>2<br>3<br>expo","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"Nginx入门实践","slug":"Nginx入门实践","date":"2018-12-03T08:01:32.000Z","updated":"2018-12-03T08:10:23.000Z","comments":true,"pin":null,"path":"api/articles/Nginx入门实践.json","excerpt":"","keywords":null,"cover":null,"content":"","text":"","link":"","raw":null,"photos":[],"categories":[],"tags":[]},{"title":"更好的理解react-redux","slug":"react-chat","date":"2018-11-21T10:06:15.000Z","updated":"2018-11-30T14:58:57.000Z","comments":true,"pin":null,"path":"api/articles/react-chat.json","excerpt":"","keywords":null,"cover":null,"content":"<ul>\n<li><p>react全家桶,更好的理解redux,用装饰器的写法使用 react-redux，socket-io即时通信</p>\n</li>\n<li><p>本文基于MacOS系统,基本的开发环境安装配置如果没有\b安装好请自行百度安装</p>\n<!-- ### ----------前后端配置安装（MacOS）------------- -->\n</li>\n</ul>\n<h5 id=\"后台数据库mongoDB安装\"><a href=\"#后台数据库mongoDB安装\" class=\"headerlink\" title=\"后台数据库mongoDB安装\"></a>后台数据库mongoDB安装</h5><blockquote>\n<p>使用homebrew安装mongodb</p>\n<ul>\n<li>brew install mongodb</li>\n<li>mongo –version 查看安装版本</li>\n<li>新版开箱即用，不用像之前要配什么DB文件了（系统环境可能需要配置一下）</li>\n<li>已默认配置启动 mongod –config /usr/local/etc/mongod.conf</li>\n<li>mongo 图形界面</li>\n<li>推荐界面管理工具 <a href=\"https://robomongo.org/\" target=\"_blank\" rel=\"noopener\">RoBo3T</a></li>\n</ul>\n</blockquote>\n<!-- ![RoBo3T](./screenshots/RoBo3T.png) -->\n<ul>\n<li>后台启动mongodb用工具成功连接数据库</li>\n</ul>\n<h5 id=\"后端基于node-express开发-后台代码-service文件夹中\"><a href=\"#后端基于node-express开发-后台代码-service文件夹中\" class=\"headerlink\" title=\"后端基于node,express开发,后台代码-service文件夹中\"></a>后端基于node,express开发,后台代码-service文件夹中</h5><blockquote>\n<p>本地后台服务开发调试 nodemon 启动后台(后台代码更新自动重启服务器)\b,安装<br><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"PLAIN\"><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\bnpm install -g nodemon</span><br></pre></td></tr></table></figure></div></p>\n</blockquote>\n<blockquote>\n<p>数据库mongodb,mongodb配合express使用需要插件mongoose<br><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"PLAIN\"><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i mongoose -S</span><br></pre></td></tr></table></figure></div></p>\n</blockquote>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"PLAIN\"><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const mongoose = require(&apos;mongoose&apos;)</span><br><span class=\"line\">const DB_URL = &apos;mongodb://127.0.0.1:27017/cmm&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">//链接数据库</span><br><span class=\"line\">mongoose.connect(DB_URL)</span><br><span class=\"line\">mongoose.connection.on(&apos;connected&apos;, () =&gt; &#123;</span><br><span class=\"line\">  console.log(&apos;数据库链接成功&apos;)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure></div>\n<!-- ### --------------界面-------------- -->\n<!-- ![登录页面](./screenshots/login.png) -->\n<!-- ### --------------前端开发-------------- -->\n<p>-安装依赖<br>-配置redeux开发调试<br><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"PLAIN\"><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#123; Provider &#125; from &apos;react-redux&apos;</span><br><span class=\"line\">import &#123; createStore,applyMiddleware,compose &#125; from &apos;redux&apos;</span><br><span class=\"line\">import thunk from &apos;redux-thunk&apos;</span><br><span class=\"line\">import App from &apos;./App&apos;;</span><br><span class=\"line\">import &#123; AppStore &#125; from &apos;@/store&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">let store = createStore(rootReducer,</span><br><span class=\"line\">compose(</span><br><span class=\"line\">    applyMiddleware(thunk),</span><br><span class=\"line\">    window.__REDUX_DEVTOOLS_EXTENSION__ &amp;&amp; window.__REDUX_DEVTOOLS_EXTENSION__()</span><br><span class=\"line\">  )  </span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">ReactDOM.render(</span><br><span class=\"line\">  &lt;Provider store=&#123;store&#125;&gt;</span><br><span class=\"line\">    &lt;App /&gt;</span><br><span class=\"line\">  &lt;/Provider&gt;,</span><br><span class=\"line\">  document.getElementById(&apos;root&apos;)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure></div></p>\n<ul>\n<li>使用 connect 链接 组件与 状态中心, connect接收两个参数（其实有4个参数）<blockquote>\n<p>1-映射数据 可以理解为 state<br>2-映射方法 </p>\n</blockquote>\n</li>\n</ul>\n<div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"PLAIN\"><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import &#123; connect &#125; from &quot;react-redux&quot;;</span><br><span class=\"line\">@connect(</span><br><span class=\"line\">  (state) =&gt; (state.user),</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    userRegisger</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\">class Register extends Component &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  render()&#123;</span><br><span class=\"line\">    return null</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">用装饰器的\b写法确实比之前的写法更简洁了</span><br></pre></td></tr></table></figure></div>\n<h3 id=\"create-react-app-中使用装饰器\"><a href=\"#create-react-app-中使用装饰器\" class=\"headerlink\" title=\"create-react-app 中使用装饰器\"></a>create-react-app 中使用装饰器</h3><p>安装<br><div class=\"highlight-wrap\"autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" contenteditable=\"true\"data-rel=\"PLAIN\"><figure class=\"iseeu highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save-dev @babel/plugin-proposal-decorators</span><br><span class=\"line\">配置（ npm run eject )</span><br><span class=\"line\">  &quot;babel&quot;: &#123;</span><br><span class=\"line\">    &quot;presets&quot;: [</span><br><span class=\"line\">      &quot;react-app&quot;</span><br><span class=\"line\">    ],</span><br><span class=\"line\">    &quot;plugins&quot;: [</span><br><span class=\"line\">      [</span><br><span class=\"line\">        &quot;@babel/plugin-proposal-decorators&quot;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          &quot;legacy&quot;: true</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      ],</span><br><span class=\"line\">      [</span><br><span class=\"line\">        &quot;import&quot;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          &quot;libraryName&quot;: &quot;antd&quot;,</span><br><span class=\"line\">          &quot;style&quot;: &quot;css&quot;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      ]</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure></div></p>\n<!-- ### --------------服务器后台-------------- -->\n<blockquote>\n<p>基于node,express开发</p>\n</blockquote>\n<ul>\n<li>app.get,app.post,开发get和post接口</li>\n<li>app.use使用模块</li>\n<li>res.send;res.json;res.sendfile</li>\n</ul>\n<blockquote>\n<p>mongodb配合express进阶</p>\n</blockquote>\n<ul>\n<li><p>mongodb独立工具函数</p>\n</li>\n<li><p>express使用body-parser支持post参数</p>\n</li>\n<li><p>使用cookie-parser储存登录信息cookie</p>\n</li>\n</ul>\n<blockquote>\n<p>密码 cmd5加密+加严 安装 npm i utility -S</p>\n</blockquote>\n<!-- ### node后台服务器开启调试模式nodemon --inspect-brk app.js -->","text":"react全家桶,更好的理解redux,用装饰器的写法使用 react-redux，socket-io即时通信本文基于MacOS系统,基本的开发环境安装配置如果没有\b安装好请自行百度安装后台数据库mongoDB安装使用homebrew安装mongodbbrew install m","link":"","raw":null,"photos":[],"categories":[],"tags":[{"name":"react","slug":"react","count":2,"path":"api/tags/react.json"}]}]}